syntax = "proto3";
import "ft.enums.proto";

option csharp_namespace = "Fibertest30.Api";
package fibertest30.gis;

service Gis {
	rpc GetAllGeoData(GetAllGeoDataRequest) returns (GetAllGeoDataResponse);
	rpc GetFiberInfo(GetFiberInfoRequest) returns (GetFiberInfoResponse);
}

enum EquipmentType {
	Nothing = 0;
	AdjustmentPoint = 100;

    EmptyNode = 200;

    CableReserve = 300;

    Other = 400;
    Closure = 402;
    Cross = 403;
    Well = 405;
    Terminal = 406;

    Rtu = 500;

    AccidentPlace = 501;
}

// if dictionary is empty - fiber is not in trace (NotInTrace)
message FiberStateDictionaryItem {
	string traceId = 1; // key
	ft.enums.FiberState traceState = 2; // value
}

message GeoCoordinate {
  double latitude = 1;
  double longitude = 2;
}

message TraceNode {
	string id = 1;
	string title = 2;
	GeoCoordinate coors = 3;
	EquipmentType equipmentType = 4;
	string comment = 5;

	optional ft.enums.FiberState state = 6;
	optional string accidentOnTraceId = 7;
}

message GeoEquipment {
	string id = 1;
	string nodeId = 2;
	string title = 3;
	EquipmentType type = 4;
	int32 cableReserveLeft = 5;
	int32 cableReserveRight = 6;
	string comment = 7;
}

message GeoFiber {
	string id = 1;
	string node1id = 2;
	GeoCoordinate coors1 = 3;
	string node2id = 4;
	GeoCoordinate coors2 = 5;
	repeated FiberStateDictionaryItem states = 7;
	repeated FiberStateDictionaryItem tracesWithExceededLossCoeff = 8;
}

message OpticalLength {
	string traceId = 1;
	double length = 2;
}

message FiberInfo {
	string fiberId = 1;
	string leftNodeTitle = 2;
	string rightNodeTitle = 3;
	double gpsLength = 4;
	double userInputedLength = 5;

	repeated OpticalLength tracesThrough = 6;
	bool hasTraceUnderMonitoring = 7;
}

message GeoTrace {
	string id = 1;
	string title = 2;
	repeated string nodeIds = 3;
	repeated string equipmentIds = 4;
	repeated string fiberIds = 5;
	bool hasAnyBaseRef = 6;
	ft.enums.FiberState state = 7;
	bool darkMode = 8;
	string comment = 9;

}

message AllGeoData {
	repeated GeoFiber fibers = 1;
	repeated TraceNode nodes = 2;
	repeated GeoTrace traces = 3;
	repeated GeoEquipment equipments = 4;
}

// GetAllGeoData
message GetAllGeoDataRequest {}

message GetAllGeoDataResponse {
	AllGeoData data = 1;
}

// GetFiberInfo
message GetFiberInfoRequest {
	string fiberId = 1;
}

message GetFiberInfoResponse {
	FiberInfo fiberInfo = 1;
}