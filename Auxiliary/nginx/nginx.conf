worker_processes 1;
events {
    worker_connections 1024;
}
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    keepalive_requests 1000;

    upstream grpc-api {
        server localhost:5235;
    }

    server {
        listen 80;

        # allow prometheus on 80 port
        location /prometheus {
            proxy_pass http://localhost:9090;
        }

        #redirect to https
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # grpc, grpc-web, and web
    # http2 is enabled because we need grpc (not only grpc-web)
    server {
        listen 443 ssl;
        http2 on;

        ssl_certificate /etc/nginx/cert/cert.pem;
        ssl_certificate_key /etc/nginx/cert/privkey.pem;
        #ssl_certificate /var/fibertest/cert/cert.pem;
        #ssl_certificate_key /var/fibertest/cert/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        #ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS:!AESCCM;


        # grpc reflection service
        # NOTE: don't use the full relection service name, i.e. "grpc.reflection.v1alpha.ServerReflection"
        #       because some tools (like grpcurl) try to reach "grpc.reflection.v1.ServerReflection" first and just failed
        #       /grpc.reflection handles all reflection service versions
        location /grpc.reflection {
            grpc_pass grpc://grpc-api;
        }

        # increase read timeout for SSE long-running request
        # default is 60s, so by default after 60s SSE's request inactivity, the connection is lost
        location /fibertest30.core.Core/GetSystemMessageStream {
            grpc_pass grpc://grpc-api;
            grpc_read_timeout 24h;
        }

        # it proxies both, grpc and grpc-web
        location /fibertest30. {
            grpc_pass grpc://grpc-api;
        }
		
		# /gis - serve special service that returns map tiles
        location /gis/ {
            proxy_pass https://localhost:7151;
        }

        # serve angular application
        location / {
            root /var/fibertest/ui;
            index index.html;
            try_files $uri $uri/ /index.html;

            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'private no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 405;
        }
    }
}

