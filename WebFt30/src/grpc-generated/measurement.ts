// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "measurement.proto" (package "fibertest30.measurement", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { TrapReceiver } from "./data.core";
import { EmailServer } from "./data.core";
import { NotificationSettings } from "./data.core";
/**
 * @generated from protobuf message fibertest30.measurement.GetSorSampleRequest
 */
export interface GetSorSampleRequest {
}
/**
 * @generated from protobuf message fibertest30.measurement.GetSorSampleResponse
 */
export interface GetSorSampleResponse {
    /**
     * @generated from protobuf field: bytes sor = 1;
     */
    sor: Uint8Array;
}
/**
 * UpdateNotificationSettings
 *
 * @generated from protobuf message fibertest30.measurement.UpdateNotificationSettingsRequest
 */
export interface UpdateNotificationSettingsRequest {
    /**
     * @generated from protobuf field: fibertest30.data.core.NotificationSettings notificationSettings = 1;
     */
    notificationSettings?: NotificationSettings;
}
/**
 * @generated from protobuf message fibertest30.measurement.UpdateNotificationSettingsResponse
 */
export interface UpdateNotificationSettingsResponse {
}
/**
 * GetNotificationSettings
 *
 * @generated from protobuf message fibertest30.measurement.GetNotificationSettingsRequest
 */
export interface GetNotificationSettingsRequest {
}
/**
 * @generated from protobuf message fibertest30.measurement.GetNotificationSettingsResponse
 */
export interface GetNotificationSettingsResponse {
    /**
     * @generated from protobuf field: fibertest30.data.core.NotificationSettings notificationSettings = 1;
     */
    notificationSettings?: NotificationSettings;
}
/**
 * TestEmailServerSettings
 *
 * @generated from protobuf message fibertest30.measurement.TestEmailServerSettingsRequest
 */
export interface TestEmailServerSettingsRequest {
    /**
     * @generated from protobuf field: fibertest30.data.core.EmailServer emailServer = 1;
     */
    emailServer?: EmailServer;
}
/**
 * @generated from protobuf message fibertest30.measurement.TestEmailServerSettingsResponse
 */
export interface TestEmailServerSettingsResponse {
}
/**
 * TestTrapReceiverSettings
 *
 * @generated from protobuf message fibertest30.measurement.TestTrapReceiverSettingsRequest
 */
export interface TestTrapReceiverSettingsRequest {
    /**
     * @generated from protobuf field: fibertest30.data.core.TrapReceiver trapReceiver = 1;
     */
    trapReceiver?: TrapReceiver;
}
/**
 * @generated from protobuf message fibertest30.measurement.TestTrapReceiverSettingsResponse
 */
export interface TestTrapReceiverSettingsResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class GetSorSampleRequest$Type extends MessageType<GetSorSampleRequest> {
    constructor() {
        super("fibertest30.measurement.GetSorSampleRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.GetSorSampleRequest
 */
export const GetSorSampleRequest = new GetSorSampleRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSorSampleResponse$Type extends MessageType<GetSorSampleResponse> {
    constructor() {
        super("fibertest30.measurement.GetSorSampleResponse", [
            { no: 1, name: "sor", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.GetSorSampleResponse
 */
export const GetSorSampleResponse = new GetSorSampleResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateNotificationSettingsRequest$Type extends MessageType<UpdateNotificationSettingsRequest> {
    constructor() {
        super("fibertest30.measurement.UpdateNotificationSettingsRequest", [
            { no: 1, name: "notificationSettings", kind: "message", T: () => NotificationSettings }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.UpdateNotificationSettingsRequest
 */
export const UpdateNotificationSettingsRequest = new UpdateNotificationSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateNotificationSettingsResponse$Type extends MessageType<UpdateNotificationSettingsResponse> {
    constructor() {
        super("fibertest30.measurement.UpdateNotificationSettingsResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.UpdateNotificationSettingsResponse
 */
export const UpdateNotificationSettingsResponse = new UpdateNotificationSettingsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNotificationSettingsRequest$Type extends MessageType<GetNotificationSettingsRequest> {
    constructor() {
        super("fibertest30.measurement.GetNotificationSettingsRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.GetNotificationSettingsRequest
 */
export const GetNotificationSettingsRequest = new GetNotificationSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNotificationSettingsResponse$Type extends MessageType<GetNotificationSettingsResponse> {
    constructor() {
        super("fibertest30.measurement.GetNotificationSettingsResponse", [
            { no: 1, name: "notificationSettings", kind: "message", T: () => NotificationSettings }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.GetNotificationSettingsResponse
 */
export const GetNotificationSettingsResponse = new GetNotificationSettingsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestEmailServerSettingsRequest$Type extends MessageType<TestEmailServerSettingsRequest> {
    constructor() {
        super("fibertest30.measurement.TestEmailServerSettingsRequest", [
            { no: 1, name: "emailServer", kind: "message", T: () => EmailServer }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.TestEmailServerSettingsRequest
 */
export const TestEmailServerSettingsRequest = new TestEmailServerSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestEmailServerSettingsResponse$Type extends MessageType<TestEmailServerSettingsResponse> {
    constructor() {
        super("fibertest30.measurement.TestEmailServerSettingsResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.TestEmailServerSettingsResponse
 */
export const TestEmailServerSettingsResponse = new TestEmailServerSettingsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestTrapReceiverSettingsRequest$Type extends MessageType<TestTrapReceiverSettingsRequest> {
    constructor() {
        super("fibertest30.measurement.TestTrapReceiverSettingsRequest", [
            { no: 1, name: "trapReceiver", kind: "message", T: () => TrapReceiver }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.TestTrapReceiverSettingsRequest
 */
export const TestTrapReceiverSettingsRequest = new TestTrapReceiverSettingsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestTrapReceiverSettingsResponse$Type extends MessageType<TestTrapReceiverSettingsResponse> {
    constructor() {
        super("fibertest30.measurement.TestTrapReceiverSettingsResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.measurement.TestTrapReceiverSettingsResponse
 */
export const TestTrapReceiverSettingsResponse = new TestTrapReceiverSettingsResponse$Type();
/**
 * @generated ServiceType for protobuf service fibertest30.measurement.Measurement
 */
export const Measurement = new ServiceType("fibertest30.measurement.Measurement", [
    { name: "GetSorSample", options: {}, I: GetSorSampleRequest, O: GetSorSampleResponse },
    { name: "UpdateNotificationSettings", options: {}, I: UpdateNotificationSettingsRequest, O: UpdateNotificationSettingsResponse },
    { name: "GetNotificationSettings", options: {}, I: GetNotificationSettingsRequest, O: GetNotificationSettingsResponse },
    { name: "TestEmailServerSettings", options: {}, I: TestEmailServerSettingsRequest, O: TestEmailServerSettingsResponse },
    { name: "TestTrapReceiverSettings", options: {}, I: TestTrapReceiverSettingsRequest, O: TestTrapReceiverSettingsResponse }
]);
