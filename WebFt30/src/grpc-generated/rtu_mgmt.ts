// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "rtu_mgmt.proto" (package "fibertest30.rtu_mgmt", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { PortOfOtau } from "./rtu_tree";
import { NetAddress } from "./rtu_tree";
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.DoubleAddress
 */
export interface DoubleAddress {
    /**
     * @generated from protobuf field: fibertest30.rtu_tree.NetAddress main = 1;
     */
    main?: NetAddress;
    /**
     * @generated from protobuf field: bool hasReserveAddress = 2;
     */
    hasReserveAddress: boolean;
    /**
     * @generated from protobuf field: fibertest30.rtu_tree.NetAddress reserve = 3;
     */
    reserve?: NetAddress;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.MeasParamByPosition
 */
export interface MeasParamByPosition {
    /**
     * @generated from protobuf field: int32 param = 1;
     */
    param: number;
    /**
     * @generated from protobuf field: int32 position = 2;
     */
    position: number;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.InitializeRtuDto
 */
export interface InitializeRtuDto {
    /**
     * @generated from protobuf field: string rtuId = 1;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: fibertest30.rtu_mgmt.DoubleAddress rtuAddresses = 2;
     */
    rtuAddresses?: DoubleAddress;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.RtuInitializedDto
 */
export interface RtuInitializedDto {
    /**
     * @generated from protobuf field: bool isInitialized = 1;
     */
    isInitialized: boolean;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.DoMeasurementClientDto
 */
export interface DoMeasurementClientDto {
    /**
     * @generated from protobuf field: string rtuId = 1;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: repeated fibertest30.rtu_tree.PortOfOtau portOfOtau = 2;
     */
    portOfOtau: PortOfOtau[];
    /**
     * @generated from protobuf field: repeated fibertest30.rtu_mgmt.MeasParamByPosition measParamsByPosition = 3;
     */
    measParamsByPosition: MeasParamByPosition[];
}
// ------------------------------------------------------------

/**
 * @generated from protobuf message fibertest30.rtu_mgmt.TestRtuConnectionRequest
 */
export interface TestRtuConnectionRequest {
    /**
     * not RtuId because it could be new address
     *
     * @generated from protobuf field: fibertest30.rtu_tree.NetAddress netAddress = 1;
     */
    netAddress?: NetAddress;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.TestRtuConnectionResponse
 */
export interface TestRtuConnectionResponse {
    /**
     * @generated from protobuf field: fibertest30.rtu_tree.NetAddress netAddress = 1;
     */
    netAddress?: NetAddress;
    /**
     * @generated from protobuf field: bool isConnectionSuccessful = 2;
     */
    isConnectionSuccessful: boolean;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.InitializeRtuRequest
 */
export interface InitializeRtuRequest {
    /**
     * @generated from protobuf field: fibertest30.rtu_mgmt.InitializeRtuDto dto = 1;
     */
    dto?: InitializeRtuDto;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.InitializeRtuResponse
 */
export interface InitializeRtuResponse {
    /**
     * @generated from protobuf field: fibertest30.rtu_mgmt.RtuInitializedDto dto = 1;
     */
    dto?: RtuInitializedDto;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.DoMeasurementClientRequest
 */
export interface DoMeasurementClientRequest {
    /**
     * @generated from protobuf field: fibertest30.rtu_mgmt.DoMeasurementClientDto dto = 1;
     */
    dto?: DoMeasurementClientDto;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.DoMeasurementClientResponse
 */
export interface DoMeasurementClientResponse {
    /**
     * @generated from protobuf field: string measurementClientId = 1;
     */
    measurementClientId: string;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.GetMeasurementClientSorRequest
 */
export interface GetMeasurementClientSorRequest {
    /**
     * @generated from protobuf field: string measurementClientId = 1;
     */
    measurementClientId: string;
    /**
     * @generated from protobuf field: bool vxsorFormat = 2;
     */
    vxsorFormat: boolean;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.GetMeasurementClientSorResponse
 */
export interface GetMeasurementClientSorResponse {
    /**
     * @generated from protobuf field: bytes sor = 1;
     */
    sor: Uint8Array;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.StopMonitoringRequest
 */
export interface StopMonitoringRequest {
    /**
     * @generated from protobuf field: string rtuId = 1;
     */
    rtuId: string;
}
/**
 * @generated from protobuf message fibertest30.rtu_mgmt.EmptyResponse
 */
export interface EmptyResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class DoubleAddress$Type extends MessageType<DoubleAddress> {
    constructor() {
        super("fibertest30.rtu_mgmt.DoubleAddress", [
            { no: 1, name: "main", kind: "message", T: () => NetAddress },
            { no: 2, name: "hasReserveAddress", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "reserve", kind: "message", T: () => NetAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.DoubleAddress
 */
export const DoubleAddress = new DoubleAddress$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MeasParamByPosition$Type extends MessageType<MeasParamByPosition> {
    constructor() {
        super("fibertest30.rtu_mgmt.MeasParamByPosition", [
            { no: 1, name: "param", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.MeasParamByPosition
 */
export const MeasParamByPosition = new MeasParamByPosition$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitializeRtuDto$Type extends MessageType<InitializeRtuDto> {
    constructor() {
        super("fibertest30.rtu_mgmt.InitializeRtuDto", [
            { no: 1, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rtuAddresses", kind: "message", T: () => DoubleAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.InitializeRtuDto
 */
export const InitializeRtuDto = new InitializeRtuDto$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RtuInitializedDto$Type extends MessageType<RtuInitializedDto> {
    constructor() {
        super("fibertest30.rtu_mgmt.RtuInitializedDto", [
            { no: 1, name: "isInitialized", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.RtuInitializedDto
 */
export const RtuInitializedDto = new RtuInitializedDto$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DoMeasurementClientDto$Type extends MessageType<DoMeasurementClientDto> {
    constructor() {
        super("fibertest30.rtu_mgmt.DoMeasurementClientDto", [
            { no: 1, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "portOfOtau", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PortOfOtau },
            { no: 3, name: "measParamsByPosition", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MeasParamByPosition }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.DoMeasurementClientDto
 */
export const DoMeasurementClientDto = new DoMeasurementClientDto$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestRtuConnectionRequest$Type extends MessageType<TestRtuConnectionRequest> {
    constructor() {
        super("fibertest30.rtu_mgmt.TestRtuConnectionRequest", [
            { no: 1, name: "netAddress", kind: "message", T: () => NetAddress }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.TestRtuConnectionRequest
 */
export const TestRtuConnectionRequest = new TestRtuConnectionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TestRtuConnectionResponse$Type extends MessageType<TestRtuConnectionResponse> {
    constructor() {
        super("fibertest30.rtu_mgmt.TestRtuConnectionResponse", [
            { no: 1, name: "netAddress", kind: "message", T: () => NetAddress },
            { no: 2, name: "isConnectionSuccessful", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.TestRtuConnectionResponse
 */
export const TestRtuConnectionResponse = new TestRtuConnectionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitializeRtuRequest$Type extends MessageType<InitializeRtuRequest> {
    constructor() {
        super("fibertest30.rtu_mgmt.InitializeRtuRequest", [
            { no: 1, name: "dto", kind: "message", T: () => InitializeRtuDto }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.InitializeRtuRequest
 */
export const InitializeRtuRequest = new InitializeRtuRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InitializeRtuResponse$Type extends MessageType<InitializeRtuResponse> {
    constructor() {
        super("fibertest30.rtu_mgmt.InitializeRtuResponse", [
            { no: 1, name: "dto", kind: "message", T: () => RtuInitializedDto }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.InitializeRtuResponse
 */
export const InitializeRtuResponse = new InitializeRtuResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DoMeasurementClientRequest$Type extends MessageType<DoMeasurementClientRequest> {
    constructor() {
        super("fibertest30.rtu_mgmt.DoMeasurementClientRequest", [
            { no: 1, name: "dto", kind: "message", T: () => DoMeasurementClientDto }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.DoMeasurementClientRequest
 */
export const DoMeasurementClientRequest = new DoMeasurementClientRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DoMeasurementClientResponse$Type extends MessageType<DoMeasurementClientResponse> {
    constructor() {
        super("fibertest30.rtu_mgmt.DoMeasurementClientResponse", [
            { no: 1, name: "measurementClientId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.DoMeasurementClientResponse
 */
export const DoMeasurementClientResponse = new DoMeasurementClientResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMeasurementClientSorRequest$Type extends MessageType<GetMeasurementClientSorRequest> {
    constructor() {
        super("fibertest30.rtu_mgmt.GetMeasurementClientSorRequest", [
            { no: 1, name: "measurementClientId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "vxsorFormat", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.GetMeasurementClientSorRequest
 */
export const GetMeasurementClientSorRequest = new GetMeasurementClientSorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMeasurementClientSorResponse$Type extends MessageType<GetMeasurementClientSorResponse> {
    constructor() {
        super("fibertest30.rtu_mgmt.GetMeasurementClientSorResponse", [
            { no: 1, name: "sor", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.GetMeasurementClientSorResponse
 */
export const GetMeasurementClientSorResponse = new GetMeasurementClientSorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StopMonitoringRequest$Type extends MessageType<StopMonitoringRequest> {
    constructor() {
        super("fibertest30.rtu_mgmt.StopMonitoringRequest", [
            { no: 1, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.StopMonitoringRequest
 */
export const StopMonitoringRequest = new StopMonitoringRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmptyResponse$Type extends MessageType<EmptyResponse> {
    constructor() {
        super("fibertest30.rtu_mgmt.EmptyResponse", []);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rtu_mgmt.EmptyResponse
 */
export const EmptyResponse = new EmptyResponse$Type();
/**
 * @generated ServiceType for protobuf service fibertest30.rtu_mgmt.RtuMgmt
 */
export const RtuMgmt = new ServiceType("fibertest30.rtu_mgmt.RtuMgmt", [
    { name: "TestRtuConnection", options: {}, I: TestRtuConnectionRequest, O: TestRtuConnectionResponse },
    { name: "InitializeRtu", options: {}, I: InitializeRtuRequest, O: InitializeRtuResponse },
    { name: "DoMeasurementClient", options: {}, I: DoMeasurementClientRequest, O: DoMeasurementClientResponse },
    { name: "GetMeasurementClientSor", options: {}, I: GetMeasurementClientSorRequest, O: GetMeasurementClientSorResponse },
    { name: "StopMonitoring", options: {}, I: StopMonitoringRequest, O: EmptyResponse }
]);
