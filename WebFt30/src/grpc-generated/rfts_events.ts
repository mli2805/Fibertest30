// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "rfts_events.proto" (package "fibertest30.rfts_events", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { EquipmentType } from "./ft.enums";
import { FiberState } from "./ft.enums";
/**
 * @generated from protobuf message fibertest30.rfts_events.GetRftsEventsRequest
 */
export interface GetRftsEventsRequest {
    /**
     * @generated from protobuf field: int32 SorFileId = 1 [json_name = "SorFileId"];
     */
    sorFileId: number;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.GetRftsEventsResponse
 */
export interface GetRftsEventsResponse {
    /**
     * @generated from protobuf field: fibertest30.rfts_events.RftsEventsData RftsEventsData = 1 [json_name = "RftsEventsData"];
     */
    rftsEventsData?: RftsEventsData;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.RftsEventsData
 */
export interface RftsEventsData {
    /**
     * @generated from protobuf field: string ErrorMessage = 1 [json_name = "ErrorMessage"];
     */
    errorMessage: string;
    /**
     * @generated from protobuf field: bool IsNoFiber = 2 [json_name = "IsNoFiber"];
     */
    isNoFiber: boolean;
    /**
     * @generated from protobuf field: repeated fibertest30.rfts_events.RftsLevel LevelArray = 3 [json_name = "LevelArray"];
     */
    levelArray: RftsLevel[];
    /**
     * @generated from protobuf field: fibertest30.rfts_events.RftsEventsSummary Summary = 4 [json_name = "Summary"];
     */
    summary?: RftsEventsSummary;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.RftsLevel
 */
export interface RftsLevel {
    /**
     * @generated from protobuf field: fibertest30.ft.enums.FiberState Level = 1 [json_name = "Level"];
     */
    level: FiberState;
    /**
     * @generated from protobuf field: bool IsFailed = 2 [json_name = "IsFailed"];
     */
    isFailed: boolean;
    /**
     * @generated from protobuf field: string FirstProblemLocation = 3 [json_name = "FirstProblemLocation"];
     */
    firstProblemLocation: string;
    /**
     * @generated from protobuf field: repeated fibertest30.rfts_events.RftsEvent EventArray = 4 [json_name = "EventArray"];
     */
    eventArray: RftsEvent[];
    /**
     * @generated from protobuf field: fibertest30.rfts_events.TotalFiberLoss TotalFiberLoss = 5 [json_name = "TotalFiberLoss"];
     */
    totalFiberLoss?: TotalFiberLoss;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.RftsEvent
 */
export interface RftsEvent {
    /**
     * @generated from protobuf field: int32 Ordinal = 1 [json_name = "Ordinal"];
     */
    ordinal: number;
    /**
     * @generated from protobuf field: bool IsNew = 2 [json_name = "IsNew"];
     */
    isNew: boolean;
    /**
     * @generated from protobuf field: bool IsFailed = 3 [json_name = "IsFailed"];
     */
    isFailed: boolean;
    /**
     * @generated from protobuf field: string LandmarkTitle = 4 [json_name = "LandmarkTitle"];
     */
    landmarkTitle: string;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.EquipmentType LandmarkType = 5 [json_name = "LandmarkType"];
     */
    landmarkType: EquipmentType;
    /**
     * @generated from protobuf field: fibertest30.rfts_events.RftsWords State = 6 [json_name = "State"];
     */
    state: RftsWords;
    /**
     * @generated from protobuf field: string DamageType = 7 [json_name = "DamageType"];
     */
    damageType: string;
    /**
     * @generated from protobuf field: string DistanceKm = 8 [json_name = "DistanceKm"];
     */
    distanceKm: string;
    /**
     * @generated from protobuf field: fibertest30.rfts_events.RftsWords Enabled = 9 [json_name = "Enabled"];
     */
    enabled: RftsWords;
    /**
     * @generated from protobuf field: string EventType = 10 [json_name = "EventType"];
     */
    eventType: string;
    /**
     * @generated from protobuf field: string ReflectanceCoeff = 11 [json_name = "ReflectanceCoeff"];
     */
    reflectanceCoeff: string;
    /**
     * @generated from protobuf field: string AttenuationInClosure = 12 [json_name = "AttenuationInClosure"];
     */
    attenuationInClosure: string;
    /**
     * @generated from protobuf field: string AttenuationCoeff = 13 [json_name = "AttenuationCoeff"];
     */
    attenuationCoeff: string;
    /**
     * @generated from protobuf field: optional fibertest30.rfts_events.MonitoringThreshold ReflectanceCoeffThreshold = 14 [json_name = "ReflectanceCoeffThreshold"];
     */
    reflectanceCoeffThreshold?: MonitoringThreshold;
    /**
     * @generated from protobuf field: optional fibertest30.rfts_events.MonitoringThreshold AttenuationInClosureThreshold = 15 [json_name = "AttenuationInClosureThreshold"];
     */
    attenuationInClosureThreshold?: MonitoringThreshold;
    /**
     * @generated from protobuf field: optional fibertest30.rfts_events.MonitoringThreshold AttenuationCoeffThreshold = 16 [json_name = "AttenuationCoeffThreshold"];
     */
    attenuationCoeffThreshold?: MonitoringThreshold;
    /**
     * @generated from protobuf field: string ReflectanceCoeffDeviation = 17 [json_name = "ReflectanceCoeffDeviation"];
     */
    reflectanceCoeffDeviation: string;
    /**
     * @generated from protobuf field: string AttenuationInClosureDeviation = 18 [json_name = "AttenuationInClosureDeviation"];
     */
    attenuationInClosureDeviation: string;
    /**
     * @generated from protobuf field: string AttenuationCoeffDeviation = 19 [json_name = "AttenuationCoeffDeviation"];
     */
    attenuationCoeffDeviation: string;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.TotalFiberLoss
 */
export interface TotalFiberLoss {
    /**
     * @generated from protobuf field: double Value = 1 [json_name = "Value"];
     */
    value: number;
    /**
     * @generated from protobuf field: fibertest30.rfts_events.MonitoringThreshold Threshold = 2 [json_name = "Threshold"];
     */
    threshold?: MonitoringThreshold;
    /**
     * @generated from protobuf field: double Deviation = 3 [json_name = "Deviation"];
     */
    deviation: number;
    /**
     * @generated from protobuf field: bool IsPassed = 4 [json_name = "IsPassed"];
     */
    isPassed: boolean;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.MonitoringThreshold
 */
export interface MonitoringThreshold {
    /**
     * @generated from protobuf field: double Value = 1 [json_name = "Value"];
     */
    value: number;
    /**
     * @generated from protobuf field: bool IsAbsolute = 2 [json_name = "IsAbsolute"];
     */
    isAbsolute: boolean;
}
/**
 * @generated from protobuf message fibertest30.rfts_events.RftsEventsSummary
 */
export interface RftsEventsSummary {
    /**
     * @generated from protobuf field: fibertest30.ft.enums.FiberState TraceState = 1 [json_name = "TraceState"];
     */
    traceState: FiberState;
    /**
     * @generated from protobuf field: double BreakLocation = 2 [json_name = "BreakLocation"];
     */
    breakLocation: number;
    /**
     * @generated from protobuf field: double Orl = 3 [json_name = "Orl"];
     */
    orl: number;
    /**
     * @generated from protobuf field: repeated fibertest30.rfts_events.LevelState LevelStates = 4 [json_name = "LevelStates"];
     */
    levelStates: LevelState[];
}
/**
 * @generated from protobuf message fibertest30.rfts_events.LevelState
 */
export interface LevelState {
    /**
     * @generated from protobuf field: string LevelTitle = 1 [json_name = "LevelTitle"];
     */
    levelTitle: string;
    /**
     * @generated from protobuf field: string State = 2 [json_name = "State"];
     */
    state: string;
}
/**
 * @generated from protobuf enum fibertest30.rfts_events.RftsWords
 */
export enum RftsWords {
    /**
     * @generated from protobuf enum value: Yes = 0;
     */
    Yes = 0,
    /**
     * @generated from protobuf enum value: Fail = 1;
     */
    Fail = 1,
    /**
     * @generated from protobuf enum value: Pass = 2;
     */
    Pass = 2,
    /**
     * @generated from protobuf enum value: NewEvent = 3;
     */
    NewEvent = 3,
    /**
     * @generated from protobuf enum value: FiberBreak = 4;
     */
    FiberBreak = 4,
    /**
     * @generated from protobuf enum value: Empty = 5;
     */
    Empty = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class GetRftsEventsRequest$Type extends MessageType<GetRftsEventsRequest> {
    constructor() {
        super("fibertest30.rfts_events.GetRftsEventsRequest", [
            { no: 1, name: "SorFileId", kind: "scalar", jsonName: "SorFileId", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.GetRftsEventsRequest
 */
export const GetRftsEventsRequest = new GetRftsEventsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRftsEventsResponse$Type extends MessageType<GetRftsEventsResponse> {
    constructor() {
        super("fibertest30.rfts_events.GetRftsEventsResponse", [
            { no: 1, name: "RftsEventsData", kind: "message", jsonName: "RftsEventsData", T: () => RftsEventsData }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.GetRftsEventsResponse
 */
export const GetRftsEventsResponse = new GetRftsEventsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RftsEventsData$Type extends MessageType<RftsEventsData> {
    constructor() {
        super("fibertest30.rfts_events.RftsEventsData", [
            { no: 1, name: "ErrorMessage", kind: "scalar", jsonName: "ErrorMessage", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "IsNoFiber", kind: "scalar", jsonName: "IsNoFiber", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "LevelArray", kind: "message", jsonName: "LevelArray", repeat: 2 /*RepeatType.UNPACKED*/, T: () => RftsLevel },
            { no: 4, name: "Summary", kind: "message", jsonName: "Summary", T: () => RftsEventsSummary }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.RftsEventsData
 */
export const RftsEventsData = new RftsEventsData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RftsLevel$Type extends MessageType<RftsLevel> {
    constructor() {
        super("fibertest30.rfts_events.RftsLevel", [
            { no: 1, name: "Level", kind: "enum", jsonName: "Level", T: () => ["fibertest30.ft.enums.FiberState", FiberState] },
            { no: 2, name: "IsFailed", kind: "scalar", jsonName: "IsFailed", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "FirstProblemLocation", kind: "scalar", jsonName: "FirstProblemLocation", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "EventArray", kind: "message", jsonName: "EventArray", repeat: 2 /*RepeatType.UNPACKED*/, T: () => RftsEvent },
            { no: 5, name: "TotalFiberLoss", kind: "message", jsonName: "TotalFiberLoss", T: () => TotalFiberLoss }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.RftsLevel
 */
export const RftsLevel = new RftsLevel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RftsEvent$Type extends MessageType<RftsEvent> {
    constructor() {
        super("fibertest30.rfts_events.RftsEvent", [
            { no: 1, name: "Ordinal", kind: "scalar", jsonName: "Ordinal", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "IsNew", kind: "scalar", jsonName: "IsNew", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "IsFailed", kind: "scalar", jsonName: "IsFailed", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "LandmarkTitle", kind: "scalar", jsonName: "LandmarkTitle", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "LandmarkType", kind: "enum", jsonName: "LandmarkType", T: () => ["fibertest30.ft.enums.EquipmentType", EquipmentType] },
            { no: 6, name: "State", kind: "enum", jsonName: "State", T: () => ["fibertest30.rfts_events.RftsWords", RftsWords] },
            { no: 7, name: "DamageType", kind: "scalar", jsonName: "DamageType", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "DistanceKm", kind: "scalar", jsonName: "DistanceKm", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "Enabled", kind: "enum", jsonName: "Enabled", T: () => ["fibertest30.rfts_events.RftsWords", RftsWords] },
            { no: 10, name: "EventType", kind: "scalar", jsonName: "EventType", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "ReflectanceCoeff", kind: "scalar", jsonName: "ReflectanceCoeff", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "AttenuationInClosure", kind: "scalar", jsonName: "AttenuationInClosure", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "AttenuationCoeff", kind: "scalar", jsonName: "AttenuationCoeff", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "ReflectanceCoeffThreshold", kind: "message", jsonName: "ReflectanceCoeffThreshold", T: () => MonitoringThreshold },
            { no: 15, name: "AttenuationInClosureThreshold", kind: "message", jsonName: "AttenuationInClosureThreshold", T: () => MonitoringThreshold },
            { no: 16, name: "AttenuationCoeffThreshold", kind: "message", jsonName: "AttenuationCoeffThreshold", T: () => MonitoringThreshold },
            { no: 17, name: "ReflectanceCoeffDeviation", kind: "scalar", jsonName: "ReflectanceCoeffDeviation", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "AttenuationInClosureDeviation", kind: "scalar", jsonName: "AttenuationInClosureDeviation", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "AttenuationCoeffDeviation", kind: "scalar", jsonName: "AttenuationCoeffDeviation", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.RftsEvent
 */
export const RftsEvent = new RftsEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TotalFiberLoss$Type extends MessageType<TotalFiberLoss> {
    constructor() {
        super("fibertest30.rfts_events.TotalFiberLoss", [
            { no: 1, name: "Value", kind: "scalar", jsonName: "Value", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "Threshold", kind: "message", jsonName: "Threshold", T: () => MonitoringThreshold },
            { no: 3, name: "Deviation", kind: "scalar", jsonName: "Deviation", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "IsPassed", kind: "scalar", jsonName: "IsPassed", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.TotalFiberLoss
 */
export const TotalFiberLoss = new TotalFiberLoss$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MonitoringThreshold$Type extends MessageType<MonitoringThreshold> {
    constructor() {
        super("fibertest30.rfts_events.MonitoringThreshold", [
            { no: 1, name: "Value", kind: "scalar", jsonName: "Value", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 2, name: "IsAbsolute", kind: "scalar", jsonName: "IsAbsolute", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.MonitoringThreshold
 */
export const MonitoringThreshold = new MonitoringThreshold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RftsEventsSummary$Type extends MessageType<RftsEventsSummary> {
    constructor() {
        super("fibertest30.rfts_events.RftsEventsSummary", [
            { no: 1, name: "TraceState", kind: "enum", jsonName: "TraceState", T: () => ["fibertest30.ft.enums.FiberState", FiberState] },
            { no: 2, name: "BreakLocation", kind: "scalar", jsonName: "BreakLocation", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "Orl", kind: "scalar", jsonName: "Orl", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "LevelStates", kind: "message", jsonName: "LevelStates", repeat: 2 /*RepeatType.UNPACKED*/, T: () => LevelState }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.RftsEventsSummary
 */
export const RftsEventsSummary = new RftsEventsSummary$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LevelState$Type extends MessageType<LevelState> {
    constructor() {
        super("fibertest30.rfts_events.LevelState", [
            { no: 1, name: "LevelTitle", kind: "scalar", jsonName: "LevelTitle", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "State", kind: "scalar", jsonName: "State", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.rfts_events.LevelState
 */
export const LevelState = new LevelState$Type();
/**
 * @generated ServiceType for protobuf service fibertest30.rfts_events.RftsEvents
 */
export const RftsEvents = new ServiceType("fibertest30.rfts_events.RftsEvents", [
    { name: "GetRftsEvents", options: {}, I: GetRftsEventsRequest, O: GetRftsEventsResponse }
]);
