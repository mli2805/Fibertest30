// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "reports.proto" (package "fibertest30.reports", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Reports } from "./reports";
import type { GetOpticalEventsReportPdfResponse } from "./reports";
import type { GetOpticalEventsReportPdfRequest } from "./reports";
import type { GetUserActonsPdfResponse } from "./reports";
import type { GetUserActonsPdfRequest } from "./reports";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetUserActionLinesResponse } from "./reports";
import type { GetUserActionLinesRequest } from "./reports";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service fibertest30.reports.Reports
 */
export interface IReportsClient {
    /**
     * @generated from protobuf rpc: GetUserActionLines(fibertest30.reports.GetUserActionLinesRequest) returns (fibertest30.reports.GetUserActionLinesResponse);
     */
    getUserActionLines(input: GetUserActionLinesRequest, options?: RpcOptions): UnaryCall<GetUserActionLinesRequest, GetUserActionLinesResponse>;
    /**
     * @generated from protobuf rpc: GetUserActonsPdf(fibertest30.reports.GetUserActonsPdfRequest) returns (fibertest30.reports.GetUserActonsPdfResponse);
     */
    getUserActonsPdf(input: GetUserActonsPdfRequest, options?: RpcOptions): UnaryCall<GetUserActonsPdfRequest, GetUserActonsPdfResponse>;
    /**
     * @generated from protobuf rpc: GetOpticalEventsReportPdf(fibertest30.reports.GetOpticalEventsReportPdfRequest) returns (fibertest30.reports.GetOpticalEventsReportPdfResponse);
     */
    getOpticalEventsReportPdf(input: GetOpticalEventsReportPdfRequest, options?: RpcOptions): UnaryCall<GetOpticalEventsReportPdfRequest, GetOpticalEventsReportPdfResponse>;
}
/**
 * @generated from protobuf service fibertest30.reports.Reports
 */
export class ReportsClient implements IReportsClient, ServiceInfo {
    typeName = Reports.typeName;
    methods = Reports.methods;
    options = Reports.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetUserActionLines(fibertest30.reports.GetUserActionLinesRequest) returns (fibertest30.reports.GetUserActionLinesResponse);
     */
    getUserActionLines(input: GetUserActionLinesRequest, options?: RpcOptions): UnaryCall<GetUserActionLinesRequest, GetUserActionLinesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserActionLinesRequest, GetUserActionLinesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUserActonsPdf(fibertest30.reports.GetUserActonsPdfRequest) returns (fibertest30.reports.GetUserActonsPdfResponse);
     */
    getUserActonsPdf(input: GetUserActonsPdfRequest, options?: RpcOptions): UnaryCall<GetUserActonsPdfRequest, GetUserActonsPdfResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserActonsPdfRequest, GetUserActonsPdfResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetOpticalEventsReportPdf(fibertest30.reports.GetOpticalEventsReportPdfRequest) returns (fibertest30.reports.GetOpticalEventsReportPdfResponse);
     */
    getOpticalEventsReportPdf(input: GetOpticalEventsReportPdfRequest, options?: RpcOptions): UnaryCall<GetOpticalEventsReportPdfRequest, GetOpticalEventsReportPdfResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetOpticalEventsReportPdfRequest, GetOpticalEventsReportPdfResponse>("unary", this._transport, method, opt, input);
    }
}
