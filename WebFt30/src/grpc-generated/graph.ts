// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "graph.proto" (package "fibertest30.graph", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message fibertest30.graph.SendCommandRequest
 */
export interface SendCommandRequest {
    /**
     * @generated from protobuf field: string command = 1;
     */
    command: string;
    /**
     * @generated from protobuf field: string commandType = 2;
     */
    commandType: string;
}
/**
 * @generated from protobuf message fibertest30.graph.SendCommandResponse
 */
export interface SendCommandResponse {
    /**
     * @generated from protobuf field: bool success = 1;
     */
    success: boolean;
    /**
     * @generated from protobuf field: string error = 2;
     */
    error: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class SendCommandRequest$Type extends MessageType<SendCommandRequest> {
    constructor() {
        super("fibertest30.graph.SendCommandRequest", [
            { no: 1, name: "command", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "commandType", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.graph.SendCommandRequest
 */
export const SendCommandRequest = new SendCommandRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendCommandResponse$Type extends MessageType<SendCommandResponse> {
    constructor() {
        super("fibertest30.graph.SendCommandResponse", [
            { no: 1, name: "success", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "error", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.graph.SendCommandResponse
 */
export const SendCommandResponse = new SendCommandResponse$Type();
/**
 * @generated ServiceType for protobuf service fibertest30.graph.Graph
 */
export const Graph = new ServiceType("fibertest30.graph.Graph", [
    { name: "SendCommand", options: {}, I: SendCommandRequest, O: SendCommandResponse }
]);
