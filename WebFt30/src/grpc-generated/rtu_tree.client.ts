// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "rtu_tree.proto" (package "fibertest30.rtu_tree", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RtuTree } from "./rtu_tree";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetRtuTreeResponse } from "./rtu_tree";
import type { GetRtuTreeRequest } from "./rtu_tree";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service fibertest30.rtu_tree.RtuTree
 */
export interface IRtuTreeClient {
    /**
     * @generated from protobuf rpc: GetRtuTree(fibertest30.rtu_tree.GetRtuTreeRequest) returns (fibertest30.rtu_tree.GetRtuTreeResponse);
     */
    getRtuTree(input: GetRtuTreeRequest, options?: RpcOptions): UnaryCall<GetRtuTreeRequest, GetRtuTreeResponse>;
}
/**
 * @generated from protobuf service fibertest30.rtu_tree.RtuTree
 */
export class RtuTreeClient implements IRtuTreeClient, ServiceInfo {
    typeName = RtuTree.typeName;
    methods = RtuTree.methods;
    options = RtuTree.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetRtuTree(fibertest30.rtu_tree.GetRtuTreeRequest) returns (fibertest30.rtu_tree.GetRtuTreeResponse);
     */
    getRtuTree(input: GetRtuTreeRequest, options?: RpcOptions): UnaryCall<GetRtuTreeRequest, GetRtuTreeResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetRtuTreeRequest, GetRtuTreeResponse>("unary", this._transport, method, opt, input);
    }
}
