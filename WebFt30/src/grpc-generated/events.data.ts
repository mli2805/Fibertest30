// @generated by protobuf-ts 2.9.4 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "events.data.proto" (package "fibertest30.events.data", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { ChannelEvent } from "./ft.enums";
import { EventStatus } from "./ft.enums";
import { BaseRefType } from "./ft.enums";
import { OpticalAccidentType } from "./ft.enums";
import { FiberState } from "./ft.enums";
import { GeoCoordinate } from "./gis";
import { Duration } from "./google/protobuf/duration";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message fibertest30.events.data.DateTimeRange
 */
export interface DateTimeRange {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp start = 1;
     */
    start?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp end = 2;
     */
    end?: Timestamp;
}
/**
 * @generated from protobuf message fibertest30.events.data.DateTimeFilter
 */
export interface DateTimeFilter {
    /**
     * @generated from protobuf field: fibertest30.events.data.DateTimeRange searchWindow = 1;
     */
    searchWindow?: DateTimeRange;
    /**
     * @generated from protobuf field: google.protobuf.Duration relativeFromNow = 2;
     */
    relativeFromNow?: Duration;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp loadSince = 3;
     */
    loadSince?: Timestamp;
    /**
     * @generated from protobuf field: bool orderDescending = 4;
     */
    orderDescending: boolean;
}
/**
 * @generated from protobuf message fibertest30.events.data.AccidentNeighbour
 */
export interface AccidentNeighbour {
    /**
     * @generated from protobuf field: int32 LandmarkIndex = 1 [json_name = "LandmarkIndex"];
     */
    landmarkIndex: number;
    /**
     * @generated from protobuf field: string Title = 2 [json_name = "Title"];
     */
    title: string;
    /**
     * @generated from protobuf field: fibertest30.gis.GeoCoordinate Coors = 3 [json_name = "Coors"];
     */
    coors?: GeoCoordinate;
    /**
     * @generated from protobuf field: double ToRtuOpticalDistanceKm = 4 [json_name = "ToRtuOpticalDistanceKm"];
     */
    toRtuOpticalDistanceKm: number;
    /**
     * @generated from protobuf field: double ToRtuPhysicalDistanceKm = 5 [json_name = "ToRtuPhysicalDistanceKm"];
     */
    toRtuPhysicalDistanceKm: number;
}
/**
 * @generated from protobuf message fibertest30.events.data.AccidentOnTraceV2
 */
export interface AccidentOnTraceV2 {
    /**
     * @generated from protobuf field: int32 BrokenRftsEventNumber = 1 [json_name = "BrokenRftsEventNumber"];
     */
    brokenRftsEventNumber: number;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.FiberState AccidentSeriousness = 2 [json_name = "AccidentSeriousness"];
     */
    accidentSeriousness: FiberState;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.OpticalAccidentType OpticalTypeOfAccident = 3 [json_name = "OpticalTypeOfAccident"];
     */
    opticalTypeOfAccident: OpticalAccidentType;
    /**
     * @generated from protobuf field: bool IsAccidentInOldEvent = 4 [json_name = "IsAccidentInOldEvent"];
     */
    isAccidentInOldEvent: boolean;
    /**
     * @generated from protobuf field: bool IsAccidentInLastNode = 5 [json_name = "IsAccidentInLastNode"];
     */
    isAccidentInLastNode: boolean;
    /**
     * @generated from protobuf field: fibertest30.gis.GeoCoordinate AccidentCoors = 6 [json_name = "AccidentCoors"];
     */
    accidentCoors?: GeoCoordinate;
    /**
     * @generated from protobuf field: int32 AccidentLandmarkIndex = 7 [json_name = "AccidentLandmarkIndex"];
     */
    accidentLandmarkIndex: number;
    /**
     * @generated from protobuf field: double AccidentToRtuOpticalDistanceKm = 8 [json_name = "AccidentToRtuOpticalDistanceKm"];
     */
    accidentToRtuOpticalDistanceKm: number;
    /**
     * @generated from protobuf field: string AccidentTitle = 9 [json_name = "AccidentTitle"];
     */
    accidentTitle: string;
    /**
     * @generated from protobuf field: double AccidentToRtuPhysicalDistanceKm = 10 [json_name = "AccidentToRtuPhysicalDistanceKm"];
     */
    accidentToRtuPhysicalDistanceKm: number;
    /**
     * @generated from protobuf field: double AccidentToLeftOpticalDistanceKm = 11 [json_name = "AccidentToLeftOpticalDistanceKm"];
     */
    accidentToLeftOpticalDistanceKm: number;
    /**
     * @generated from protobuf field: double AccidentToLeftPhysicalDistanceKm = 12 [json_name = "AccidentToLeftPhysicalDistanceKm"];
     */
    accidentToLeftPhysicalDistanceKm: number;
    /**
     * @generated from protobuf field: double AccidentToRightOpticalDistanceKm = 13 [json_name = "AccidentToRightOpticalDistanceKm"];
     */
    accidentToRightOpticalDistanceKm: number;
    /**
     * @generated from protobuf field: double AccidentToRightPhysicalDistanceKm = 14 [json_name = "AccidentToRightPhysicalDistanceKm"];
     */
    accidentToRightPhysicalDistanceKm: number;
    /**
     * @generated from protobuf field: string EventCode = 15 [json_name = "EventCode"];
     */
    eventCode: string;
    /**
     * @generated from protobuf field: double DeltaLen = 16 [json_name = "DeltaLen"];
     */
    deltaLen: number;
    /**
     * @generated from protobuf field: optional fibertest30.events.data.AccidentNeighbour Left = 17 [json_name = "Left"];
     */
    left?: AccidentNeighbour;
    /**
     * @generated from protobuf field: optional fibertest30.events.data.AccidentNeighbour Right = 18 [json_name = "Right"];
     */
    right?: AccidentNeighbour;
}
/**
 * @generated from protobuf message fibertest30.events.data.OpticalEvent
 */
export interface OpticalEvent {
    /**
     * @generated from protobuf field: int32 eventId = 1;
     */
    eventId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp measuredAt = 2;
     */
    measuredAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp registeredAt = 3;
     */
    registeredAt?: Timestamp;
    /**
     * @generated from protobuf field: string rtuTitle = 4;
     */
    rtuTitle: string;
    /**
     * @generated from protobuf field: string rtuId = 5;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: string traceTitle = 6;
     */
    traceTitle: string;
    /**
     * @generated from protobuf field: string traceId = 7;
     */
    traceId: string;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.BaseRefType baseRefType = 8;
     */
    baseRefType: BaseRefType;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.FiberState traceState = 9;
     */
    traceState: FiberState;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.EventStatus eventStatus = 10;
     */
    eventStatus: EventStatus;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp statusChangedAt = 11;
     */
    statusChangedAt?: Timestamp;
    /**
     * @generated from protobuf field: string statusChangedByUser = 12;
     */
    statusChangedByUser: string;
    /**
     * @generated from protobuf field: string comment = 13;
     */
    comment: string;
    /**
     * @generated from protobuf field: repeated fibertest30.events.data.AccidentOnTraceV2 accidents = 14;
     */
    accidents: AccidentOnTraceV2[];
}
/**
 * @generated from protobuf message fibertest30.events.data.NetworkEvent
 */
export interface NetworkEvent {
    /**
     * @generated from protobuf field: int32 eventId = 1;
     */
    eventId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp registeredAt = 2;
     */
    registeredAt?: Timestamp;
    /**
     * @generated from protobuf field: string rtuId = 3;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: string rtuTitle = 4;
     */
    rtuTitle: string;
    /**
     * @generated from protobuf field: bool isRtuAvailable = 5;
     */
    isRtuAvailable: boolean;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.ChannelEvent onMainChannel = 6;
     */
    onMainChannel: ChannelEvent;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.ChannelEvent onReserveChannel = 7;
     */
    onReserveChannel: ChannelEvent;
}
/**
 * @generated from protobuf message fibertest30.events.data.BopEvent
 */
export interface BopEvent {
    /**
     * @generated from protobuf field: int32 eventId = 1;
     */
    eventId: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp registeredAt = 2;
     */
    registeredAt?: Timestamp;
    /**
     * @generated from protobuf field: string bopAddress = 3;
     */
    bopAddress: string;
    /**
     * @generated from protobuf field: string rtuId = 4;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: string rtuTitle = 5;
     */
    rtuTitle: string;
    /**
     * @generated from protobuf field: string serial = 6;
     */
    serial: string;
    /**
     * @generated from protobuf field: bool isBopOk = 7;
     */
    isBopOk: boolean;
}
/**
 * @generated from protobuf message fibertest30.events.data.RtuAccident
 */
export interface RtuAccident {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: bool isMeasurementProblem = 2;
     */
    isMeasurementProblem: boolean;
    /**
     * @generated from protobuf field: int32 returnCode = 3;
     */
    returnCode: number;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp registeredAt = 4;
     */
    registeredAt?: Timestamp;
    /**
     * @generated from protobuf field: string rtuTitle = 5;
     */
    rtuTitle: string;
    /**
     * @generated from protobuf field: string rtuId = 6;
     */
    rtuId: string;
    /**
     * @generated from protobuf field: string traceTitle = 7;
     */
    traceTitle: string;
    /**
     * @generated from protobuf field: string traceId = 8;
     */
    traceId: string;
    /**
     * @generated from protobuf field: fibertest30.ft.enums.BaseRefType baseRefType = 9;
     */
    baseRefType: BaseRefType;
    /**
     * @generated from protobuf field: string comment = 10;
     */
    comment: string;
    /**
     * @generated from protobuf field: int32 clearedAccidentWithId = 11;
     */
    clearedAccidentWithId: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class DateTimeRange$Type extends MessageType<DateTimeRange> {
    constructor() {
        super("fibertest30.events.data.DateTimeRange", [
            { no: 1, name: "start", kind: "message", T: () => Timestamp },
            { no: 2, name: "end", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.DateTimeRange
 */
export const DateTimeRange = new DateTimeRange$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DateTimeFilter$Type extends MessageType<DateTimeFilter> {
    constructor() {
        super("fibertest30.events.data.DateTimeFilter", [
            { no: 1, name: "searchWindow", kind: "message", T: () => DateTimeRange },
            { no: 2, name: "relativeFromNow", kind: "message", T: () => Duration },
            { no: 3, name: "loadSince", kind: "message", T: () => Timestamp },
            { no: 4, name: "orderDescending", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.DateTimeFilter
 */
export const DateTimeFilter = new DateTimeFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccidentNeighbour$Type extends MessageType<AccidentNeighbour> {
    constructor() {
        super("fibertest30.events.data.AccidentNeighbour", [
            { no: 1, name: "LandmarkIndex", kind: "scalar", jsonName: "LandmarkIndex", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "Title", kind: "scalar", jsonName: "Title", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "Coors", kind: "message", jsonName: "Coors", T: () => GeoCoordinate },
            { no: 4, name: "ToRtuOpticalDistanceKm", kind: "scalar", jsonName: "ToRtuOpticalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "ToRtuPhysicalDistanceKm", kind: "scalar", jsonName: "ToRtuPhysicalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.AccidentNeighbour
 */
export const AccidentNeighbour = new AccidentNeighbour$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AccidentOnTraceV2$Type extends MessageType<AccidentOnTraceV2> {
    constructor() {
        super("fibertest30.events.data.AccidentOnTraceV2", [
            { no: 1, name: "BrokenRftsEventNumber", kind: "scalar", jsonName: "BrokenRftsEventNumber", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "AccidentSeriousness", kind: "enum", jsonName: "AccidentSeriousness", T: () => ["fibertest30.ft.enums.FiberState", FiberState] },
            { no: 3, name: "OpticalTypeOfAccident", kind: "enum", jsonName: "OpticalTypeOfAccident", T: () => ["fibertest30.ft.enums.OpticalAccidentType", OpticalAccidentType] },
            { no: 4, name: "IsAccidentInOldEvent", kind: "scalar", jsonName: "IsAccidentInOldEvent", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "IsAccidentInLastNode", kind: "scalar", jsonName: "IsAccidentInLastNode", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "AccidentCoors", kind: "message", jsonName: "AccidentCoors", T: () => GeoCoordinate },
            { no: 7, name: "AccidentLandmarkIndex", kind: "scalar", jsonName: "AccidentLandmarkIndex", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "AccidentToRtuOpticalDistanceKm", kind: "scalar", jsonName: "AccidentToRtuOpticalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 9, name: "AccidentTitle", kind: "scalar", jsonName: "AccidentTitle", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "AccidentToRtuPhysicalDistanceKm", kind: "scalar", jsonName: "AccidentToRtuPhysicalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 11, name: "AccidentToLeftOpticalDistanceKm", kind: "scalar", jsonName: "AccidentToLeftOpticalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 12, name: "AccidentToLeftPhysicalDistanceKm", kind: "scalar", jsonName: "AccidentToLeftPhysicalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 13, name: "AccidentToRightOpticalDistanceKm", kind: "scalar", jsonName: "AccidentToRightOpticalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 14, name: "AccidentToRightPhysicalDistanceKm", kind: "scalar", jsonName: "AccidentToRightPhysicalDistanceKm", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 15, name: "EventCode", kind: "scalar", jsonName: "EventCode", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "DeltaLen", kind: "scalar", jsonName: "DeltaLen", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 17, name: "Left", kind: "message", jsonName: "Left", T: () => AccidentNeighbour },
            { no: 18, name: "Right", kind: "message", jsonName: "Right", T: () => AccidentNeighbour }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.AccidentOnTraceV2
 */
export const AccidentOnTraceV2 = new AccidentOnTraceV2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpticalEvent$Type extends MessageType<OpticalEvent> {
    constructor() {
        super("fibertest30.events.data.OpticalEvent", [
            { no: 1, name: "eventId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "measuredAt", kind: "message", T: () => Timestamp },
            { no: 3, name: "registeredAt", kind: "message", T: () => Timestamp },
            { no: 4, name: "rtuTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "traceTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "traceId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "baseRefType", kind: "enum", T: () => ["fibertest30.ft.enums.BaseRefType", BaseRefType] },
            { no: 9, name: "traceState", kind: "enum", T: () => ["fibertest30.ft.enums.FiberState", FiberState] },
            { no: 10, name: "eventStatus", kind: "enum", T: () => ["fibertest30.ft.enums.EventStatus", EventStatus] },
            { no: 11, name: "statusChangedAt", kind: "message", T: () => Timestamp },
            { no: 12, name: "statusChangedByUser", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "comment", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "accidents", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AccidentOnTraceV2 }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.OpticalEvent
 */
export const OpticalEvent = new OpticalEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NetworkEvent$Type extends MessageType<NetworkEvent> {
    constructor() {
        super("fibertest30.events.data.NetworkEvent", [
            { no: 1, name: "eventId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "registeredAt", kind: "message", T: () => Timestamp },
            { no: 3, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rtuTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "isRtuAvailable", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "onMainChannel", kind: "enum", T: () => ["fibertest30.ft.enums.ChannelEvent", ChannelEvent] },
            { no: 7, name: "onReserveChannel", kind: "enum", T: () => ["fibertest30.ft.enums.ChannelEvent", ChannelEvent] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.NetworkEvent
 */
export const NetworkEvent = new NetworkEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BopEvent$Type extends MessageType<BopEvent> {
    constructor() {
        super("fibertest30.events.data.BopEvent", [
            { no: 1, name: "eventId", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "registeredAt", kind: "message", T: () => Timestamp },
            { no: 3, name: "bopAddress", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "rtuTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "serial", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "isBopOk", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.BopEvent
 */
export const BopEvent = new BopEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RtuAccident$Type extends MessageType<RtuAccident> {
    constructor() {
        super("fibertest30.events.data.RtuAccident", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "isMeasurementProblem", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "returnCode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "registeredAt", kind: "message", T: () => Timestamp },
            { no: 5, name: "rtuTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "rtuId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "traceTitle", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "traceId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "baseRefType", kind: "enum", T: () => ["fibertest30.ft.enums.BaseRefType", BaseRefType] },
            { no: 10, name: "comment", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "clearedAccidentWithId", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message fibertest30.events.data.RtuAccident
 */
export const RtuAccident = new RtuAccident$Type();
